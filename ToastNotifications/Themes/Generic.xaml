<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:toast="clr-namespace:ToastNotifications">

    <Canvas x:Key="CloseIcon" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
        <Path Width="31.6666" Height="31.6667" Canvas.Left="22.1666" Canvas.Top="22.1667" Stretch="Fill" Fill="#FF000000" Data="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z "/>
    </Canvas>

    <Style TargetType="Border" x:Key="NotificationBorder">
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Width" Value="250" />
        <Setter Property="MinHeight" Value="70" />
    </Style>

    <Style TargetType="StackPanel" x:Key="NotificationPanel">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="Rectangle" x:Key="NotificationIcon">
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="0,5,5,5" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Fill" Value="White"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="NotificationText">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="200" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="NotificationCloseButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="5, -5, -5, 0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#EEE" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#DDD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Rectangle" x:Key="CloseButtonIcon">
        <Setter Property="Width" Value="10"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" />
    </Style>

    <Style TargetType="{x:Type toast:NotificationControl}">
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform x:Name="scaleTransform" ScaleX="0" ScaleY="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type toast:NotificationControl}">
                    <Border Background="{TemplateBinding Background}" Style="{StaticResource NotificationBorder}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Rectangle Style="{StaticResource NotificationIcon}" Grid.RowSpan="2" Grid.Column="0" >
                                <Rectangle.OpacityMask>
                                    <VisualBrush Visual="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}" Stretch="Fill" />
                                </Rectangle.OpacityMask>
                            </Rectangle>

                            <TextBlock Style="{StaticResource NotificationText}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Notification.Message}"  Grid.Column="1" />

                            <Button x:Name="CloseButton" Style="{StaticResource NotificationCloseButton}" Grid.Column="1" >
                                <Rectangle Style="{StaticResource CloseButtonIcon}" Margin="2">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource CloseIcon}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Button>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.5" />
                                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX" From="0" To="1" Duration="0:0:.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="0" To="1" Duration="0:0:.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="NotificationClosing">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard x:Name="ClosingStoryboard">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:.5" />
                                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX" From="1" To="0" Duration="0:0:.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="1" To="0" Duration="0:0:.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type toast:NotificationPopup}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type toast:NotificationPopup}">
                    <ContentPresenter Content="{TemplateBinding Child}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
